openapi: "3.0.1"
info:
  title: Заголовок сервиса
  version: "1.0"
  description: |
    Описание сервиса
servers:
  - url: http://localhost:8080/api
    description: Локальный сервер API

paths:
  /ping:
    get:
      summary: Проверка доступности сервера
      description: |
        Этот эндпоинт используется для проверки готовности сервера обрабатывать запросы. 

        Чекер программа будет ждать первый успешный ответ и затем начнет выполнение тестовых сценариев.
      operationId: checkServer
      responses:
        "200":
          description: |
            Сервер готов обрабатывать запросы, если отвечает "200 OK".
            Тело ответа не важно, достаточно вернуть "ok".
          content:
            text/plain:
              schema:
                type: string
                example: ok
        "400":
          description: Неверный формат запроса или его параметры.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Сервер не готов обрабатывать запросы, если ответ статусом 500 или любой другой, кроме 200.

  /signin:
    post:
      summary: Регистрация нового пользователя
      description: Регистрация нового пользователя
      operationId: signIn
      requestBody:
        description: Данные нового пользователя
        required: true
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/userReq"
      responses:
        "200":
          description: Пользователь успешно зарегестрирован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userRes"
        "400":
          description: Неверный формат запроса или его параметры.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "401":
          description: Пользователь не существует или введены некорректные данные.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Сервер не готов обрабатывать запросы, если ответ статусом 500 или любой другой, кроме 200.
  
  /login:
    post:
      summary: Вход пользователя
      description: Логин
      operationId: logIn
      requestBody:
        description: Данные пользователя
        required: true
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/loginUserReq"
      responses:
        "200":
          description: Вход выполнен успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/loginUserRes"
        "400":
          description: Неверный формат запроса или его параметры.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "401":
          description: Пользователь не существует или введены некорректные данные.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Сервер не готов обрабатывать запросы, если ответ статусом 500 или любой другой, кроме 200.

  /logout:
    post:
      summary: Выход пользователя
      description: Логаут
      operationId: logOut
      responses:
        "200":
          description: Вход выполнен успешно
        "400":
          description: Неверный формат запроса или его параметры.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "401":
          description: Пользователь не существует или введены некорректные данные.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Сервер не готов обрабатывать запросы, если ответ статусом 500 или любой другой, кроме 200.

  /renew:
    post:
      summary: Обновлене access токена
      description: Обновлене access токена
      operationId: renewAccessToken
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/renewAccessTokenReq"
      responses:
        "200":
          description: Access токен обновлён успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/renewAccessTokenRes"
        "400":
          description: Неверный формат запроса или его параметры.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "401":
          description: Пользователь не существует или введены некорректные данные.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        "500":
          description: Сервер не готов обрабатывать запросы, если ответ статусом 500 или любой другой, кроме 200.


components:
  schemas:
    username:
      type: string
      description: Уникальный логин пользователя
      example: user123
    email:
      type: string
      description: Уникальный email пользователя
      example: user@mail.ru
    password:
      type: string
      description: Пороль пользователя
      example: qwerty12345
    is_admin:
      type: boolean
    session_id:
      type: string
      description: ID созданной сессии
    access_token:
      type: string
      description: Access токен пользователя
    refresh_token:
      type: string
      description: Refresh токен пользователя
    access_token_expires_at:
      type: string
      format: date
      description: Время истечения Access токена
    refresh_token_expires_at:
      type: string
      format: date
      description: Время истечения Refresh токена
    
    
    userReq:
      type: object
      description: Тело запроса при регистрации нового пользователя
      properties:
        username:
          $ref: "#/components/schemas/username"
        email:
          $ref: "#/components/schemas/email"
        password:
          $ref: "#/components/schemas/password"
        is_admin:
          $ref: "#/components/schemas/is_admin"
      required:
        - username
        - email
        - password
        - is_admin
    
    userRes:
      type: object
      description: Тело ответа при успешной регистрации пользователя
      properties:
        username:
          $ref: "#/components/schemas/username"
        email:
          $ref: "#/components/schemas/email"
        is_admin:
          $ref: "#/components/schemas/is_admin"
      required:
        - username
        - email
        - is_admin

    loginUserReq:
      type: object
      description: Тело запроса при входе пользователя
      properties:
        email:
          $ref: "#/components/schemas/email"
        password:
          $ref: "#/components/schemas/password"
      required:
        - email
        - password

    loginUserRes:
      type: object
      description: Тело ответа при успешном входе пользователя
      properties:
        session_id:
          $ref: "#/components/schemas/session_id"
        access_token:
          $ref: "#/components/schemas/access_token"
        refresh_token:
          $ref: "#/components/schemas/refresh_token"
        access_token_expires_at:
          $ref: "#/components/schemas/access_token_expires_at"
        refresh_token_expires_at:
          $ref: "#/components/schemas/refresh_token_expires_at"
        user:
          $ref: "#/components/schemas/userRes"
      required:
        - session_id
        - access_token
        - refresh_token
        - access_token_expires_at
        - refresh_token_expires_at
        - user

    renewAccessTokenReq:
      type: object
      description: Запрос на обновление access токена
      properties:
        refresh_token:
          $ref: "#/components/schemas/refresh_token"
      required:
        - refresh_token

    renewAccessTokenRes:
      type: object
      description: Ответ на запрос обновления access токена
      properties:
        access_token:
          $ref: "#/components/schemas/access_token"
        access_token_expires_at:
          $ref: "#/components/schemas/access_token_expires_at"
      required:
        - access_token
        - access_token_expires_at

    errorResponse:
      type: object
      description: Используется для возвращения ошибки пользователю
      properties:
        reason:
          type: string
          description: Описание ошибки в свободной форме
          minLength: 5
      required:
        - reason
      example:
        reason: <объяснение, почему запрос пользователя не может быть обработан>